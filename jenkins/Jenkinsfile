pipeline {
    agent any
    
    parameters {
        choice(name: 'ENVIRONMENT', choices: ['dev', 'staging', 'prod'], description: 'Environment')
        choice(name: 'CLOUD_PROVIDER', choices: ['both', 'aws', 'azure'], description: 'Cloud Provider')
        booleanParam(name: 'DESTROY_INFRA', defaultValue: false, description: 'Destroy infrastructure')
    }
    
    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        ARM_CLIENT_ID = credentials('azure-client-id')
        ARM_CLIENT_SECRET = credentials('azure-client-secret')
        ARM_SUBSCRIPTION_ID = credentials('azure-subscription-id')
        ARM_TENANT_ID = credentials('azure-tenant-id')
        TF_VAR_environment = "${params.ENVIRONMENT}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                echo "ðŸš€ Multi-Cloud Pipeline Started"
            }
        }
        
        stage('Validate') {
            steps {
                dir('terraform') {
                    sh 'terraform init -backend=false'
                    sh 'terraform validate'
                }
            }
        }
        
        stage('Build') {
            steps {
                sh 'docker build -t multicloud-app:${BUILD_NUMBER} .'
            }
        }
        
        stage('Test') {
            steps {
                sh 'npm install && npm test'
            }
        }
        
        stage('Deploy/Destroy') {
            steps {
                dir('terraform') {
                    script {
                        if (params.DESTROY_INFRA) {
                            sh 'terraform destroy -auto-approve'
                        } else {
                            sh 'terraform init && terraform apply -auto-approve'
                        }
                    }
                }
            }
        }
    }
}
